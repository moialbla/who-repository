# define parameters to use during the build
parameters:
  projectFolder: 'project_2'
  buildOutputFolder: 'project_2/build'
  vmImage: 'ubuntu-18.04'
  workingDirectory: '$(Build.SourcesDirectory)/project_2'
  buildContext: '.'
  npm_config_cache: $(Pipeline.Workspace)/.npm
  CYPRESS_CACHE_FOLDER: $(Pipeline.Workspace)/.cache/Cypress

jobs:
- job: CI
  displayName: 'CI'
  pool:
    vmImage: '${{ parameters.vmImage }}' 
  # define the steps of the build
  steps:
    - task: Npm@1
      displayName: 'npm Install' 
      inputs:
        command: install
        workingDir: '${{ parameters.workingDirectory }}'

    - task: Npm@1
      displayName: 'npm run test'
      inputs:
        command: 'custom'
        customCommand: 'run test'
        workingDir: '${{ parameters.workingDirectory }}'
      env:
        CI: true 

    - task: Npm@1
      displayName: 'npm run coverage'
      inputs:
        command: 'custom'
        customCommand: 'run test:CI'
        workingDir: '${{ parameters.workingDirectory }}' 

    - task: PublishCodeCoverageResults@1
      displayName: "Publish code coverage"
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: "${{ parameters.workingDirectory }}/coverage/cobertura-coverage.xml"
        reportDirectory: "${{ parameters.workingDirectory }}/coverage"
        failIfCoverageEmpty: true
        
    - task: Npm@1
      displayName: 'npm build' 
      inputs:
        command: 'custom'
        customCommand: 'run build'
        workingDir: '${{ parameters.workingDirectory }}' 

     
    - task: CopyFiles@2
      inputs:
        sourceFolder: '${{ parameters.buildOutputFolder }}'
        contents: '**/*' 
        targetFolder: '$(Build.ArtifactStagingDirectory)'
        cleanTargetFolder: true
        ## Archive the files into a zip file for publishing

  ## Archive the files into a zip file for publishing
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(Build.ArtifactStagingDirectory)
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
        includeRootFolder: false

    ## Publish the zip file
    - task: PublishBuildArtifacts@1
      inputs:
        pathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'